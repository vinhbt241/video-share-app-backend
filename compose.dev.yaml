services:
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - db:/var/lib/postgresql/data
  redis:
    image: redis:7.2-alpine
    command: redis-server
    volumes:
      - redis:/data
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: video_share_app_development
      DB_PORT: 5432
      DB_HOST: db
      RAILS_ENV: development
      RAILS_MAX_THREADS: 5
      JWT_SECRET: ${JWT_SECRET}
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
    ports:
      - 3000:3000
    depends_on:
      - db
      - redis
  worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: "bundle exec sidekiq"
    entrypoint: []
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: video_share_app_development
      DB_PORT: 5432
      DB_HOST: db
      RAILS_ENV: development
      RAILS_MAX_THREADS: 5
      JWT_SECRET: ${JWT_SECRET}
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
    depends_on:
      - db
      - redis

volumes:
  db:
  redis:
